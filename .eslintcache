[{"/Users/mac/Desktop/anyfin/country-lookup-client/src/components/Card/index.tsx":"1","/Users/mac/Desktop/anyfin/country-lookup-client/src/pages/Home/index.tsx":"2","/Users/mac/Desktop/anyfin/country-lookup-client/src/helpers/request.ts":"3","/Users/mac/Desktop/anyfin/country-lookup-client/src/components/ResultCard/index.tsx":"4","/Users/mac/Desktop/anyfin/country-lookup-client/src/pages/Login/index.tsx":"5"},{"size":333,"mtime":1608555745112,"results":"6","hashOfConfig":"7"},{"size":2881,"mtime":1608628519207,"results":"8","hashOfConfig":"7"},{"size":1198,"mtime":1608596798459,"results":"9","hashOfConfig":"7"},{"size":3600,"mtime":1608555745116,"results":"10","hashOfConfig":"7"},{"size":2152,"mtime":1608632066503,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1axndhc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Desktop/anyfin/country-lookup-client/src/components/Card/index.tsx",[],"/Users/mac/Desktop/anyfin/country-lookup-client/src/pages/Home/index.tsx",["23"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../../commons/Layout';\nimport Input from '../../components/InputField';\nimport ResultCard, { Country } from '../../components/ResultCard';\nimport endpoints from '../../action/endpoint';\nimport { get } from '../../helpers/request';\nimport loadingIndicator from '../../assets/images/loading-blue.svg';\nimport toast from 'react-hot-toast';\nimport './styles.css';\n\nconst Home = () => {\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [searchResults, setSearchResults] = useState<Array<Country> | null>(\n    null,\n  );\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  //Send search request 3 seconds after user stops typing\n  //instead of on every key press\n  useEffect(() => {\n    if (!searchResults) {\n      setIsLoading(false);\n    }\n    if (searchQuery && searchQuery.trim().length) {\n      setIsLoading(true);\n    }\n    const holdRequest = setTimeout(() => {\n      if (searchQuery && searchQuery.trim().length) {\n        get(endpoints.searchCountry(searchQuery.trim()), {\n          'Content-Type': 'application/json',\n        })\n          .then((response) => {\n            setIsLoading(false);\n            if (response.status === 200) {\n              setSearchResults(response.data.payload);\n            }\n          })\n          .catch((error) => {\n            setIsLoading(false);\n            toast.error(error.message);\n            setSearchResults(null);\n          });\n      }\n    }, 3000);\n\n    return () => clearTimeout(holdRequest);\n  }, [searchQuery]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const renderCountriesResult = () => {\n    return searchResults ? (\n      searchResults.map((country) => {\n        return (\n          <ResultCard\n            key={country.name}\n            name={country.name}\n            currencies={country.currencies}\n            population={country.population}\n            currencyToSEK={country.currencyToSEK}\n          />\n        );\n      })\n    ) : (\n      <h1 id=\"no-results\">No results found :(</h1>\n    );\n  };\n  return (\n    <Layout>\n      <main className=\"home-wrapper\">\n        <section className=\"search-input\">\n          <Input\n            label=\"Enter country name\"\n            type=\"text\"\n            value={searchQuery}\n            name=\"search\"\n            onChange={handleChange}\n            id=\"search\"\n            placeholder=\"Search country by name\"\n            showLabel\n          />\n        </section>\n        <section className=\"search-results\">\n          {!isLoading ? (\n            renderCountriesResult()\n          ) : (\n            <div className=\"search-loading\">\n              <img src={loadingIndicator} alt=\"Loading...\" />\n            </div>\n          )}\n        </section>\n      </main>\n    </Layout>\n  );\n};\n\nexport default Home;\n","/Users/mac/Desktop/anyfin/country-lookup-client/src/helpers/request.ts",[],"/Users/mac/Desktop/anyfin/country-lookup-client/src/components/ResultCard/index.tsx",[],"/Users/mac/Desktop/anyfin/country-lookup-client/src/pages/Login/index.tsx",[],{"ruleId":"24","severity":1,"message":"25","line":47,"column":6,"nodeType":"26","endLine":47,"endColumn":19,"suggestions":"27"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchResults'. Either include it or remove the dependency array.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [searchQuery, searchResults]",{"range":"31","text":"32"},[1554,1567],"[searchQuery, searchResults]"]
